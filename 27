### 基础篇

#### 1、软件测试的生命周期

​	软件研发的生命周期：需求 -  计划 - 设计 - 编码（研发）- 测试 - 运行维护

​	软件测试的生命周期：需求分析 - 测试计划 - 测试设计（测试开发）（测试用例、写自动化脚本）- 测试执行 - 										   测试评估（测试报告）============== 软件测试的流程 

#### 2、如何描述一个缺陷

编写**测试用例**的要素：（没有实际结果）

要素：**测试环境、测试数据、测试步骤、预期结果、实际结果、缺陷级别**、测试版本、前期条件.....

沟通：沟通的技巧、沟通的时机

#### 3、缺陷的级别

**四种**：崩溃（A）、严重（B）、一般（C）、次要（D）、建议（E）

#### 4、如何发现更多的缺陷

​	1、二八原则（人员、模块）

​	2、逆向思维、扩展性思维

​	3、不要依赖需求和测试用例

​	4、测试尽早介入

#### 5、如何开展第一次测试（了解）

​	1、学习项目的所有文档

​	2、参加所有的会议

​	3、获得公司的项目管理的工具（缺陷、用例、需求），地址，用户名，密码

​	4、学习用例、缺陷书写的规范，工具的使用规范

​	5、积极主动和负责人以及项目组的人员沟通

#### 6、提交一个BUG研发人员不认可

​	1、先检查自身，是否BUG描述清楚

​	2、检查缺陷级别

​	3、和研发人员沟通

​	4、站在用户的角度考虑问题

​	5、提高自身的业务水平和技术能力

​	6、第三方的帮助



### 测试用例篇

#### 1、基于需求

依据需求来写测试点

难点：读出需求之外的测试点（需求非常了解）

​	（读出需求之外的测试点）方法：1、多学习分析需求2、项目测试的经验3、和项目组人员多沟通

#### 2、等价类

思想：解决无穷输入

目的：减少测试用例条目

场景：输入

概念：无穷输入进行N个归类，从内一个类中提取一个数据进行测试，只要有一个数据测试通过，我们就认为他所在的这一类的数据全部测试通过。

分类：

1）有效等价类：和需求一致

2）无效等价类：和需求不一致

#### 3、边界值

场景：输入和输出

强调：输入和输出的‘’边界值‘’

是等价类的一种补充方法，与它基本成对出现

取值：开区间和闭区间

  [ 1，50 ]   ： 0，1，50，51

（ 1,50 ]     ： 1，2，50，51

#### 4、因果图

强调：输入（原因）和输出（结果）之间的关系

概念：输入（原因）和输出（结果）之间的关系，输出是依赖输入的，输入可以是多个

步骤：

1）理出所有的输入

2）理出所有的输出

3）理出输入和输出的关系

4）画出因果图

5）画出判定表：输入：幂数				输出：底数

6）从判定表里提出测试用例

基础概念：恒等、与、或、非



#### 5、正交排列法

原理：正交表（正交实验）（抽样）

目的：减少测试用例的条数

性质：1.任何一列中出现的数据个数一样

​			2.任何两列中有序对数出现的次数一样

L= N(TC) 

C：因素，就是变量（列数）

T：水平数（变量的取值）

N : 实验次数 N = C * ( T - 1) + 1 （行数）

步骤：

1）提取因素

2）提取水平

3）找出适合（最优的）正交表

4）把正交表的取值一一映射到表中

5）表中每一行就是一条测试用例

6）你认为特殊的测试数据表中没有的添加进来

#### 6、场景法

可大可小，两个单位：

一个为事件 ：事件流

一个为功能：业务流程

> eg：以功能为单位
>
> 注册--登录--写邮件--发邮件 为一个事件流
>
> 只登录：不是场景法
>
> 以事件为单位
>
> 登录，是场景

理解为业务流程（一个业务流程不一定是一个场景）

业务流程：把孤立的功能点串起来

​			注册--登录--写邮件--发邮件

业务流程是场景法的典型用法

**扩展**：

点击一下“百度一下”会触发：click事件

登录框：输入用户名和密码点击‘’登录‘’

1.判断用户名是存在

2.判断密码和用户名是否匹配

3.判断用户状态是否正常

4.判断用户是否激活

5.触发click或者submit

1-2-3-4-5就是一个事件流

4-3-2-1-5 也是一个事件流

#### 7、错误推测法（猜测）

非凭空想象，是由来源的，三大来源：

1）对某项测试时间长

2）用户反馈

3）缺陷、故障库

> eg：输入框：要求类型字符型
>
> 字符型：
>
> 非字符型：等价类中的无效等价类，同时他也是错误推测法

> eg：一个研发人员的代码能力不行：
>
> 对该研发人员加强测试，用的方法就只能是错误推测法

#### 8、如何确保测试用例的正确性（了解面试题）

**评审** --- 5分

评审分类：

1）项目评审

2）用户评审

3）同行评审------7，8分

9-10分：三种评审类型讲以下

### 测试类型分类

#### 1、按研发阶段（重点）

|          | 单元测试                                                     | 集成测试                                                     | 系统测试                                | 验收测试                                |
| -------- | ------------------------------------------------------------ | ------------------------------------------------------------ | --------------------------------------- | --------------------------------------- |
| 测试对象 | 模块(接口、代码)                                             | 模块之间的接口，集成后的功能                                 | 整个系统（包括如软件和硬件）            | 整个系统（包括如软件和硬件）            |
| 测试阶段 | 编码后或TTD（编码前）                                        | 单元测试之后                                                 | 集成测试之后                            | 系统测试之后                            |
| 测试方法 | 白盒测试                                                     | 白盒测试方法和黑盒测试相结合                                 | 黑盒测试方法                            | 黑盒测试发                              |
| 测试内容 | 模块的接口，局部的数据结构，路径覆盖，边界处理，错误处理，业务逻辑 | 模块之间的接口，模块之间的功能，集成后的功能，全局数据结构，一个模块出错后对其他模块的影响 | 功能，性能，安全，界面，易用，安装..... | 功能，性能，安全，界面，易用，安装..... |
| 测试人员 | 白盒测试人员或研发人员                                       | 白盒测试人员或研发人员                                       | 黑盒测试人员                            | 用户                                    |
| 测试依据 | 详细设计文档+代码                                            | 概要设计文档+单元设计后模块                                  | 需求规格说明书                          | 用户需求+验收文档                       |

#### 2、按实施组织

|            | 环境                 | 人员                                       | 顺序不同 | 周期      |
| :--------: | -------------------- | ------------------------------------------ | -------- | --------- |
|     A      | 开发环境或预发布环境 | 公司内部人员（排除本项目的研发和测试人员） | 先A      | 比B测试短 |
|     B      | 用户环境             | 用户                                       | 后B      | 时间长    |
| 第三方测试 | 软件评测机构         | 外包（只外包测试环节）                     |          |           |



#### 3、按是否运行

|          | 测试内容                         | 核心区别   |                            |
| -------- | -------------------------------- | ---------- | -------------------------- |
| 静态测试 | 语法，词法，业务逻辑，流程，规范 | 不运行程序 | 不仅仅测试代码，还测试文档 |
| 动态测试 | 功能，通常说的测试就是动态测试   | 运行程序   |                            |

#### 4、按是否手工

|            |                    |                      |
| ---------- | ------------------ | -------------------- |
| 手工测试   | 效率低，容易出错   | 探索性测试，自由测试 |
| 自动化测试 | 效率高，不容易出错 | 根据代码             |

**手工测试和自动化测试两者是互补的，自动化测试不能代替手工测试**

#### 5、按地域

|                              |      |      |
| ---------------------------- | ---- | ---- |
| 国际化测试（站在国际角度）   |      |      |
| 本地化测试（在哪个国家测试） |      |      |

#### 6、按是否查看代码（重点）

|      |      |      |
| ---- | ---- | ---- |
| 白盒 |      |      |
| 黑盒 |      |      |
| 灰盒 |      |      |

#### 7、按测试对象（重点）

功能，性能，流程，界面，安全，安装，易用，移植......
